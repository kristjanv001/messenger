{"ast":null,"code":"var _jsxFileName = \"/home/kristjan/Documents/devx/projects/active/react-cp-projects/2020.07.07-fb-messenger/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport 'antd/dist/antd.css';\nimport \"./styles.css\";\nimport { Button, Input, Layout, Breadcrumb, Form } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport { Message } from \"./Message\";\nimport { db } from \"./firebase\";\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport firebase from 'firebase/app';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content,\n  Footer\n} = Layout;\nexport const App = () => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [userName, setUserName] = useState(\"unknown\");\n  const messagesRef = db.collection(\"messages\");\n  const query = messagesRef.orderBy('createdAt');\n  const [messages] = useCollectionData(query, {\n    idField: 'id'\n  });\n  useEffect(() => {\n    const userNamePrompt = prompt(\"Please enter your name\");\n\n    if (userNamePrompt) {\n      setUserName(userNamePrompt);\n    }\n  }, []);\n\n  const sendMessage = async () => {\n    await messagesRef.add({\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      text: input,\n      userName: userName\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      className: \"layout\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        className: \"site-page-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Messenger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        style: {\n          padding: '0 50px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          style: {\n            margin: '16px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Hello, \", userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"site-layout-content\",\n          children: messages && messages.map(message => {\n            return /*#__PURE__*/_jsxDEV(Message, {\n              loggedInUserName: userName,\n              messageObj: message\n            }, Math.random(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Form.Provider, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onFinish: sendMessage,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                value: input,\n                onChange: evt => setInput(evt.target.value),\n                style: {\n                  width: 200\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                disabled: !input,\n                onClick: sendMessage,\n                type: \"primary\",\n                icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this),\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eXRoJNWfsJoCRXAQKYhiwxKQs5s=\", false, function () {\n  return [useCollectionData];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kristjan/Documents/devx/projects/active/react-cp-projects/2020.07.07-fb-messenger/src/App.tsx"],"names":["useState","useEffect","Button","Input","Layout","Breadcrumb","Form","SendOutlined","Message","db","useCollectionData","firebase","Header","Content","Footer","App","input","setInput","userName","setUserName","messagesRef","collection","query","orderBy","messages","idField","userNamePrompt","prompt","sendMessage","add","createdAt","firestore","FieldValue","serverTimestamp","text","padding","margin","map","message","Math","random","textAlign","evt","target","value","width"],"mappings":"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","sourcesContent":["import { FC, useState, useEffect } from 'react';\nimport 'antd/dist/antd.css';\nimport \"./styles.css\"\nimport { Button, Input, Layout, Breadcrumb, Form } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport { Message } from \"./Message\"\nimport { db } from \"./firebase\"\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { MessageType } from \"./types\"\nimport firebase from 'firebase/app'\n\n\nconst { Header, Content, Footer } = Layout;\n\nexport const App: FC = () => {\n\n  const [input, setInput] = useState(\"\")\n  const [userName, setUserName] = useState(\"unknown\")\n\n  const messagesRef = db.collection(\"messages\")\n  const query = messagesRef.orderBy('createdAt')\n  const [messages]: [MessageType[] | undefined, boolean, Error | undefined] = useCollectionData<MessageType>(query, { idField: 'id' })\n\n\n  useEffect(() => {\n    const userNamePrompt = prompt(\"Please enter your name\")\n    if (userNamePrompt) {\n      setUserName(userNamePrompt)\n    }\n  }, [])\n\n  const sendMessage = async () => {\n\n    await messagesRef.add({\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      text: input,\n      userName: userName\n    })\n\n    setInput(\"\")\n  }\n\n  return (\n    <div >\n      <Layout className=\"layout\">\n        <Header className=\"site-page-header\">\n          <div className=\"logo\" />\n          <h1>Messenger</h1>\n        </Header>\n        <Content style={{ padding: '0 50px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n\n          </Breadcrumb>\n          <h2>Hello, {userName}</h2>\n          <div className=\"site-layout-content\">\n            {messages && messages.map((message) => {\n              return (\n\n                <Message key={Math.random()} loggedInUserName={userName} messageObj={message} />\n              )\n            })}\n\n\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>\n          <Form.Provider >\n            <Form onFinish={sendMessage}>\n              <div >\n                <Input\n                  value={input}\n                  onChange={evt => setInput(evt.target.value)}\n                  style={{ width: 200 }}\n                />\n                <Button\n                  disabled={!input}\n                  onClick={sendMessage}\n                  type=\"primary\"\n                  icon={<SendOutlined />}>Send\n                </Button>\n              </div>\n            </Form>\n          </Form.Provider>\n        </Footer>\n      </Layout>\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}