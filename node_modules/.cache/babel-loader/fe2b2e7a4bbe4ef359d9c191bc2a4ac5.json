{"ast":null,"code":"var _jsxFileName = \"/home/kristjan/Documents/devx/projects/active/react-cp-projects/2020.07.07-fb-messenger/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport \"./styles.css\";\nimport { Button, Input, Layout, Breadcrumb, Form } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport { Message } from \"./Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content,\n  Footer\n} = Layout;\nexport const App = () => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  console.log(messages);\n\n  const sendMessage = () => {\n    // evt.preventDefault()\n    setMessages([...messages, input]);\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      className: \"layout\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        className: \"site-page-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Messenger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        style: {\n          padding: '0 50px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          style: {\n            margin: '16px 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            children: \"List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            children: \"App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"site-layout-content\",\n          children: [messages.map(msg => {\n            return (\n              /*#__PURE__*/\n              // <p key={Math.random()}>{msg}</p>\n              _jsxDEV(Message, {\n                message: msg\n              }, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)\n            );\n          }), /*#__PURE__*/_jsxDEV(Form.Provider, {\n            onFormFinish: sendMessage,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  value: input,\n                  onChange: evt => setInput(evt.target.value),\n                  style: {\n                    width: 200\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: !input,\n                  onClick: sendMessage,\n                  shape: \"round\",\n                  type: \"primary\",\n                  icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 27\n                  }, this),\n                  children: \"Send Message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"2021\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}; // onSubmit={(e: React.SyntheticEvent) => sendMessage}\n// evt: React.MouseEvent | React.KeyboardEvent\n\n_s(App, \"b4CPYHEX7dP45BXTPMmxW5D/IPo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kristjan/Documents/devx/projects/active/react-cp-projects/2020.07.07-fb-messenger/src/App.tsx"],"names":["useState","Button","Input","Layout","Breadcrumb","Form","SendOutlined","Message","Header","Content","Footer","App","input","setInput","messages","setMessages","userName","setUserName","console","log","sendMessage","padding","margin","map","msg","Math","random","evt","target","value","width","textAlign"],"mappings":"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","sourcesContent":["import { FC, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport \"./styles.css\"\nimport { Button, Input, Layout, Breadcrumb, Form } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport { Message } from \"./Message\"\n\nconst { Header, Content, Footer } = Layout;\n\nexport const App: FC = () => {\n\n  type Messages = [] | string[]\n\n  const [input, setInput] = useState(\"\")\n  const [messages, setMessages] = useState<Messages>([])\n  const [userName, setUserName] = useState(\"\")\n\n  console.log(messages)\n\n  const sendMessage = () => {\n    // evt.preventDefault()\n    setMessages([...messages, input])\n    setInput(\"\")\n  }\n\n  return (\n    <div >\n      <Layout className=\"layout\">\n        <Header className=\"site-page-header\">\n          <div className=\"logo\" />\n          <h1>Messenger</h1>\n        </Header>\n        <Content style={{ padding: '0 50px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\n            <Breadcrumb.Item>List</Breadcrumb.Item>\n            <Breadcrumb.Item>App</Breadcrumb.Item>\n          </Breadcrumb>\n          <div className=\"site-layout-content\">\n            {messages.map((msg: string) => {\n              return (\n                // <p key={Math.random()}>{msg}</p>\n                <Message key={Math.random()} message={msg} />\n              )\n            })}\n            <Form.Provider onFormFinish={sendMessage}>\n              <Form >\n                <div>\n                  <Input\n                    value={input}\n                    onChange={evt => setInput(evt.target.value)}\n                    style={{ width: 200 }}\n                  />\n                  <Button\n                    disabled={!input}\n                    onClick={sendMessage}\n                    shape=\"round\"\n                    type=\"primary\"\n                    icon={<SendOutlined />}>Send Message\n                </Button>\n                </div>\n              </Form>\n            </Form.Provider>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>2021</Footer>\n      </Layout>\n\n    </div>\n  );\n}\n\n\n// onSubmit={(e: React.SyntheticEvent) => sendMessage}\n// evt: React.MouseEvent | React.KeyboardEvent"]},"metadata":{},"sourceType":"module"}